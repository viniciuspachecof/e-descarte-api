// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using e_descarte_api.Data;

namespace e_descarte_api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("e_descarte_api.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<int>("ponto")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("item");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Rádio",
                            ponto = 1
                        },
                        new
                        {
                            id = 2,
                            nome = "Televisores",
                            ponto = 2
                        },
                        new
                        {
                            id = 3,
                            nome = "Tablets",
                            ponto = 3
                        },
                        new
                        {
                            id = 4,
                            nome = "Monitores",
                            ponto = 4
                        },
                        new
                        {
                            id = 5,
                            nome = "Teclados",
                            ponto = 5
                        },
                        new
                        {
                            id = 6,
                            nome = "Impressoras",
                            ponto = 6
                        },
                        new
                        {
                            id = 7,
                            nome = "Câmeras Fotográficas",
                            ponto = 7
                        },
                        new
                        {
                            id = 8,
                            nome = "Aparelhos de Som",
                            ponto = 8
                        },
                        new
                        {
                            id = 9,
                            nome = "Geladeira",
                            ponto = 9
                        },
                        new
                        {
                            id = 10,
                            nome = "Fogão",
                            ponto = 10
                        });
                });

            modelBuilder.Entity("e_descarte_api.Models.PontoDescarte", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("fone")
                        .HasColumnType("text");

                    b.Property<double>("latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<int>("tipo")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("nome")
                        .IsUnique();

                    b.HasIndex("usuarioId");

                    b.ToTable("pontodescarte");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ativo = true,
                            fone = "(48) 3445-8811",
                            latitude = -28.6868546,
                            longitude = -49.384514699999997,
                            nome = "FAMCRI",
                            status = false,
                            tipo = 0,
                            usuarioId = 1
                        },
                        new
                        {
                            id = 2,
                            ativo = true,
                            fone = "(48) 3431-3700",
                            latitude = -28.681176099999998,
                            longitude = -49.3738259,
                            nome = "Faculdades ESUCRI",
                            status = true,
                            tipo = 1,
                            usuarioId = 2
                        });
                });

            modelBuilder.Entity("e_descarte_api.Models.PontoDescarteItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("itemId")
                        .HasColumnType("integer");

                    b.Property<int>("pontodescarteId")
                        .HasColumnType("integer");

                    b.Property<int>("quant")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<int>("totalponto")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("itemId");

                    b.HasIndex("pontodescarteId");

                    b.HasIndex("usuarioId");

                    b.ToTable("pontodescarteitem");
                });

            modelBuilder.Entity("e_descarte_api.Models.RankingPontuacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("nivel")
                        .HasColumnType("integer");

                    b.Property<int>("pontuacao")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("usuarioId");

                    b.ToTable("rankingpontuacao");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nivel = 0,
                            pontuacao = 0,
                            usuarioId = 1
                        },
                        new
                        {
                            id = 2,
                            nivel = 0,
                            pontuacao = 0,
                            usuarioId = 2
                        });
                });

            modelBuilder.Entity("e_descarte_api.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fone")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .HasColumnType("text");

                    b.Property<string>("tipo")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("usuario");

                    b.HasData(
                        new
                        {
                            id = 1,
                            email = "vinicius@hotmail.com",
                            fone = "(48) 99999-9999",
                            nome = "Vinicius",
                            senha = "123456789",
                            tipo = "CATADOR"
                        },
                        new
                        {
                            id = 2,
                            email = "rodolfo@hotmail.com",
                            fone = "(48) 88888-8888",
                            nome = "Rodolfo",
                            senha = "987654321",
                            tipo = "DESCARTANTE"
                        },
                        new
                        {
                            id = 3,
                            email = "admin@hotmail.com",
                            nome = "Administrador",
                            senha = "admin1234",
                            tipo = "ADMINISTRADOR"
                        });
                });

            modelBuilder.Entity("e_descarte_api.Models.PontoDescarte", b =>
                {
                    b.HasOne("e_descarte_api.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_descarte_api.Models.PontoDescarteItem", b =>
                {
                    b.HasOne("e_descarte_api.Models.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_descarte_api.Models.PontoDescarte", "pontodescarte")
                        .WithMany()
                        .HasForeignKey("pontodescarteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_descarte_api.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_descarte_api.Models.RankingPontuacao", b =>
                {
                    b.HasOne("e_descarte_api.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
